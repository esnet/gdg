// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	client "github.com/grafana/grafana-openapi-client-go/client"
	mock "github.com/stretchr/testify/mock"
)

// NewClientOpts is an autogenerated mock type for the NewClientOpts type
type NewClientOpts struct {
	mock.Mock
}

type NewClientOpts_Expecter struct {
	mock *mock.Mock
}

func (_m *NewClientOpts) EXPECT() *NewClientOpts_Expecter {
	return &NewClientOpts_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: transportConfig
func (_m *NewClientOpts) Execute(transportConfig *client.TransportConfig) {
	_m.Called(transportConfig)
}

// NewClientOpts_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type NewClientOpts_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - transportConfig *client.TransportConfig
func (_e *NewClientOpts_Expecter) Execute(transportConfig any) *NewClientOpts_Execute_Call {
	return &NewClientOpts_Execute_Call{Call: _e.mock.On("Execute", transportConfig)}
}

func (_c *NewClientOpts_Execute_Call) Run(run func(transportConfig *client.TransportConfig)) *NewClientOpts_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*client.TransportConfig))
	})
	return _c
}

func (_c *NewClientOpts_Execute_Call) Return() *NewClientOpts_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *NewClientOpts_Execute_Call) RunAndReturn(run func(*client.TransportConfig)) *NewClientOpts_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewNewClientOpts creates a new instance of NewClientOpts. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNewClientOpts(t interface {
	mock.TestingT
	Cleanup(func())
}) *NewClientOpts {
	mock := &NewClientOpts{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
