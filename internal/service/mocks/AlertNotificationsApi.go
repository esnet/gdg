// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	models "github.com/grafana/grafana-openapi-client-go/models"
	mock "github.com/stretchr/testify/mock"
)

// AlertNotificationsApi is an autogenerated mock type for the AlertNotificationsApi type
type AlertNotificationsApi struct {
	mock.Mock
}

type AlertNotificationsApi_Expecter struct {
	mock *mock.Mock
}

func (_m *AlertNotificationsApi) EXPECT() *AlertNotificationsApi_Expecter {
	return &AlertNotificationsApi_Expecter{mock: &_m.Mock}
}

// DeleteAllAlertNotifications provides a mock function with given fields:
func (_m *AlertNotificationsApi) DeleteAllAlertNotifications() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// AlertNotificationsApi_DeleteAllAlertNotifications_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAllAlertNotifications'
type AlertNotificationsApi_DeleteAllAlertNotifications_Call struct {
	*mock.Call
}

// DeleteAllAlertNotifications is a helper method to define mock.On call
func (_e *AlertNotificationsApi_Expecter) DeleteAllAlertNotifications() *AlertNotificationsApi_DeleteAllAlertNotifications_Call {
	return &AlertNotificationsApi_DeleteAllAlertNotifications_Call{Call: _e.mock.On("DeleteAllAlertNotifications")}
}

func (_c *AlertNotificationsApi_DeleteAllAlertNotifications_Call) Run(run func()) *AlertNotificationsApi_DeleteAllAlertNotifications_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AlertNotificationsApi_DeleteAllAlertNotifications_Call) Return(_a0 []string) *AlertNotificationsApi_DeleteAllAlertNotifications_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AlertNotificationsApi_DeleteAllAlertNotifications_Call) RunAndReturn(run func() []string) *AlertNotificationsApi_DeleteAllAlertNotifications_Call {
	_c.Call.Return(run)
	return _c
}

// DownloadAlertNotifications provides a mock function with given fields:
func (_m *AlertNotificationsApi) DownloadAlertNotifications() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// AlertNotificationsApi_DownloadAlertNotifications_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DownloadAlertNotifications'
type AlertNotificationsApi_DownloadAlertNotifications_Call struct {
	*mock.Call
}

// DownloadAlertNotifications is a helper method to define mock.On call
func (_e *AlertNotificationsApi_Expecter) DownloadAlertNotifications() *AlertNotificationsApi_DownloadAlertNotifications_Call {
	return &AlertNotificationsApi_DownloadAlertNotifications_Call{Call: _e.mock.On("DownloadAlertNotifications")}
}

func (_c *AlertNotificationsApi_DownloadAlertNotifications_Call) Run(run func()) *AlertNotificationsApi_DownloadAlertNotifications_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AlertNotificationsApi_DownloadAlertNotifications_Call) Return(_a0 []string) *AlertNotificationsApi_DownloadAlertNotifications_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AlertNotificationsApi_DownloadAlertNotifications_Call) RunAndReturn(run func() []string) *AlertNotificationsApi_DownloadAlertNotifications_Call {
	_c.Call.Return(run)
	return _c
}

// ListAlertNotifications provides a mock function with given fields:
func (_m *AlertNotificationsApi) ListAlertNotifications() []*models.AlertNotification {
	ret := _m.Called()

	var r0 []*models.AlertNotification
	if rf, ok := ret.Get(0).(func() []*models.AlertNotification); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.AlertNotification)
		}
	}

	return r0
}

// AlertNotificationsApi_ListAlertNotifications_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListAlertNotifications'
type AlertNotificationsApi_ListAlertNotifications_Call struct {
	*mock.Call
}

// ListAlertNotifications is a helper method to define mock.On call
func (_e *AlertNotificationsApi_Expecter) ListAlertNotifications() *AlertNotificationsApi_ListAlertNotifications_Call {
	return &AlertNotificationsApi_ListAlertNotifications_Call{Call: _e.mock.On("ListAlertNotifications")}
}

func (_c *AlertNotificationsApi_ListAlertNotifications_Call) Run(run func()) *AlertNotificationsApi_ListAlertNotifications_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AlertNotificationsApi_ListAlertNotifications_Call) Return(_a0 []*models.AlertNotification) *AlertNotificationsApi_ListAlertNotifications_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AlertNotificationsApi_ListAlertNotifications_Call) RunAndReturn(run func() []*models.AlertNotification) *AlertNotificationsApi_ListAlertNotifications_Call {
	_c.Call.Return(run)
	return _c
}

// UploadAlertNotifications provides a mock function with given fields:
func (_m *AlertNotificationsApi) UploadAlertNotifications() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// AlertNotificationsApi_UploadAlertNotifications_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UploadAlertNotifications'
type AlertNotificationsApi_UploadAlertNotifications_Call struct {
	*mock.Call
}

// UploadAlertNotifications is a helper method to define mock.On call
func (_e *AlertNotificationsApi_Expecter) UploadAlertNotifications() *AlertNotificationsApi_UploadAlertNotifications_Call {
	return &AlertNotificationsApi_UploadAlertNotifications_Call{Call: _e.mock.On("UploadAlertNotifications")}
}

func (_c *AlertNotificationsApi_UploadAlertNotifications_Call) Run(run func()) *AlertNotificationsApi_UploadAlertNotifications_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AlertNotificationsApi_UploadAlertNotifications_Call) Return(_a0 []string) *AlertNotificationsApi_UploadAlertNotifications_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AlertNotificationsApi_UploadAlertNotifications_Call) RunAndReturn(run func() []string) *AlertNotificationsApi_UploadAlertNotifications_Call {
	_c.Call.Return(run)
	return _c
}

// NewAlertNotificationsApi creates a new instance of AlertNotificationsApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAlertNotificationsApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *AlertNotificationsApi {
	mock := &AlertNotificationsApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
