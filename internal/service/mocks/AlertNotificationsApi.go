// Code generated by mockery v2.34.0. DO NOT EDIT.

package mocks

import (
	models "github.com/esnet/grafana-swagger-api-golang/goclient/models"
	mock "github.com/stretchr/testify/mock"
)

// AlertNotificationsApi is an autogenerated mock type for the AlertNotificationsApi type
type AlertNotificationsApi struct {
	mock.Mock
}

// DeleteAllAlertNotifications provides a mock function with given fields:
func (_m *AlertNotificationsApi) DeleteAllAlertNotifications() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// DownloadAlertNotifications provides a mock function with given fields:
func (_m *AlertNotificationsApi) DownloadAlertNotifications() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// ListAlertNotifications provides a mock function with given fields:
func (_m *AlertNotificationsApi) ListAlertNotifications() []*models.AlertNotification {
	ret := _m.Called()

	var r0 []*models.AlertNotification
	if rf, ok := ret.Get(0).(func() []*models.AlertNotification); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.AlertNotification)
		}
	}

	return r0
}

// UploadAlertNotifications provides a mock function with given fields:
func (_m *AlertNotificationsApi) UploadAlertNotifications() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// NewAlertNotificationsApi creates a new instance of AlertNotificationsApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAlertNotificationsApi(t interface {
	mock.TestingT
	Cleanup(func())
}) *AlertNotificationsApi {
	mock := &AlertNotificationsApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
