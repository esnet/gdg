[{"body":"Configuration ","link":"https://netsage-project.github.io/grafana-dashboard-manager/docs/","title":"GDG Docs"},{"body":"Getting started This project requires Go to be installed. On OS X with Homebrew you can just run brew install go.\nmake a copy of conf/importer-example.yml and name it conf/importer.yml You'll need GRAFANA ADMINISTRATIVE privileges to proceed.\nAuthentication You can use either an Auth Token or username/password credentials. If you configure both then the Token is given priority.\nWatched folders under grafana is a white list of folders that are being managed by the tool. By default only \u0026quot;General\u0026quot; is managed.\nenv.output defines where the files will be saved and imported from.\nGlobal Flags globals.debug when set will print a more verbose output (Development In Progress) globals.ignore_ssl_errors when set will disregard any SSL errors and proceed as expected\nBuilding/Running the app Running it then should be as simple as:\n1$ make build 2$ ./bin/grafana-dashboard-manager ","link":"https://netsage-project.github.io/grafana-dashboard-manager/docs/configuration/","title":"Configuration"},{"body":"Making a release Install goreleaser.\n1brew install goreleaser/tap/goreleaser 2brew reinstall goreleaser` export your GITHUB_TOKEN.\n1export GITHUB_TOKEN=\u0026#34;secret\u0026#34; git tag v0.1.0 goreleaser release\nNOTE: CI/CD pipeline should do all this automatically. make release-snapshot is used to test the release build process. Once a build is tagged all artifacts should be built automatically and attached to the github release page.\nNOTE: mac binary are not signed so will likely complain.\n","link":"https://netsage-project.github.io/grafana-dashboard-manager/docs/developer/","title":"Developer Guide"},{"body":"Every namespace supporting CRUD operations has the functions: list, import, export, clear operating on only the monitored folders.\nContexts Starting with version 0.1.4 contexts are now supported. Your config can contain one or multiple contexts which are essentially a grafana server configuration.\nctx is shorthand for context and basic CRUD is supported which is mainly tooling to make it easier to avoid updating the yaml file manually\n1./bin/gdg ctx list -- Lists all known contexts 2./bin/gdg ctx show qa -- shows the configuration for the selected context 3./bin/gdg ctx set production -- updates the active config and sets it to the request value. 4./bin/gdg ctx delete qa -- Deletes the QA context 5./bin/gdg ctx cp qa staging -- copies the qa context to staging and sets it as active 6./bin/gdg ctx clear -- Will delete all active contexts leaving only a single example entry Dashboards Dashboards are imported or exported from organization specified in configuration file otherwise current organization user is used.\nAll commands can use dashboards or dash to manage dashboards\n1./bin/gdg dash list -- Lists all current dashboards 2./bin/gdg dash import -- Import all dashboards from grafana to local file system 3./bin/gdg dash export -- Exports all dashboard from local filesystem (matching folder filter) to Grafana 4./bin/gdg dash clear -- Deletes all dashboards DataSources DataSources credentials are keyed by the name of the DataSource. See see config example. If the datasource JSON doesn't have auth enabled, the credentials are ignored. If Credentials are missing, we'll fall back on default credentials if any exist. The password is set as a value for basicAuthPassword in the API payload. Datasources are imported or exported from organization specified in configuration file otherwise current organization user is used.\nAll commands can use datasources or ds to manage datasources\n1./bin/gdg ds list -- Lists all current datasources 2./bin/gdg ds import -- Import all datasources from grafana to local file system 3./bin/gdg ds export -- Exports all dashboard from local filesystem (matching folder filter) to Grafana 4./bin/gdg ds clear -- Deletes all datasources Organizations Command can use organizations or org to manage organizations.\n1./bin/gdg org list -- Lists all organizations Users Only supported with basic auth. Users is the only one where basic auth is given priority. API Auth is not supported, so will try to use basic auth if configured otherwise will warn the user and exit.\n1./bin/gdg users list -- Lists all known users 2./bin/gdg users promote -u user@foobar.com -- promotes the user to a grafana admin ","link":"https://netsage-project.github.io/grafana-dashboard-manager/docs/usage_guide/","title":"Usage Guide"},{"body":"Welcome to GDG Documentation Site These documents are provided for the Grafana Dash-n-Grab utility. It's a tool used to manage dashboards, datasources, orgs and various entities of the Grafana application. All interactions are done via the Grafana API.\nRead the Docs\n  ","link":"https://netsage-project.github.io/grafana-dashboard-manager/","title":"Grafana Dash-n-Go"}]